// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport_catalogue.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_transport_5fcatalogue_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_transport_5fcatalogue_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "data_transport_catalogue.pb.h"
#include "map_renderer.pb.h"
#include "transport_router.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_transport_5fcatalogue_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_transport_5fcatalogue_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_transport_5fcatalogue_2eproto;
namespace t_c_srlz {
class TransportCatalogue;
struct TransportCatalogueDefaultTypeInternal;
extern TransportCatalogueDefaultTypeInternal _TransportCatalogue_default_instance_;
}  // namespace t_c_srlz
PROTOBUF_NAMESPACE_OPEN
template<> ::t_c_srlz::TransportCatalogue* Arena::CreateMaybeMessage<::t_c_srlz::TransportCatalogue>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace t_c_srlz {

// ===================================================================

class TransportCatalogue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:t_c_srlz.TransportCatalogue) */ {
 public:
  inline TransportCatalogue() : TransportCatalogue(nullptr) {}
  ~TransportCatalogue() override;
  explicit PROTOBUF_CONSTEXPR TransportCatalogue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TransportCatalogue(const TransportCatalogue& from);
  TransportCatalogue(TransportCatalogue&& from) noexcept
    : TransportCatalogue() {
    *this = ::std::move(from);
  }

  inline TransportCatalogue& operator=(const TransportCatalogue& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransportCatalogue& operator=(TransportCatalogue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransportCatalogue& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransportCatalogue* internal_default_instance() {
    return reinterpret_cast<const TransportCatalogue*>(
               &_TransportCatalogue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TransportCatalogue& a, TransportCatalogue& b) {
    a.Swap(&b);
  }
  inline void Swap(TransportCatalogue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransportCatalogue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransportCatalogue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TransportCatalogue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TransportCatalogue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TransportCatalogue& from) {
    TransportCatalogue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransportCatalogue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "t_c_srlz.TransportCatalogue";
  }
  protected:
  explicit TransportCatalogue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListStopFieldNumber = 1,
    kListBusFieldNumber = 2,
    kListStopLenghtFieldNumber = 3,
    kRenderSettingsFieldNumber = 4,
    kTRFieldNumber = 5,
  };
  // repeated .d_t_c_srlz.Stop list_stop = 1;
  int list_stop_size() const;
  private:
  int _internal_list_stop_size() const;
  public:
  void clear_list_stop();
  ::d_t_c_srlz::Stop* mutable_list_stop(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Stop >*
      mutable_list_stop();
  private:
  const ::d_t_c_srlz::Stop& _internal_list_stop(int index) const;
  ::d_t_c_srlz::Stop* _internal_add_list_stop();
  public:
  const ::d_t_c_srlz::Stop& list_stop(int index) const;
  ::d_t_c_srlz::Stop* add_list_stop();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Stop >&
      list_stop() const;

  // repeated .d_t_c_srlz.Bus list_bus = 2;
  int list_bus_size() const;
  private:
  int _internal_list_bus_size() const;
  public:
  void clear_list_bus();
  ::d_t_c_srlz::Bus* mutable_list_bus(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Bus >*
      mutable_list_bus();
  private:
  const ::d_t_c_srlz::Bus& _internal_list_bus(int index) const;
  ::d_t_c_srlz::Bus* _internal_add_list_bus();
  public:
  const ::d_t_c_srlz::Bus& list_bus(int index) const;
  ::d_t_c_srlz::Bus* add_list_bus();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Bus >&
      list_bus() const;

  // repeated .d_t_c_srlz.StopsLenght list_stop_lenght = 3;
  int list_stop_lenght_size() const;
  private:
  int _internal_list_stop_lenght_size() const;
  public:
  void clear_list_stop_lenght();
  ::d_t_c_srlz::StopsLenght* mutable_list_stop_lenght(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::StopsLenght >*
      mutable_list_stop_lenght();
  private:
  const ::d_t_c_srlz::StopsLenght& _internal_list_stop_lenght(int index) const;
  ::d_t_c_srlz::StopsLenght* _internal_add_list_stop_lenght();
  public:
  const ::d_t_c_srlz::StopsLenght& list_stop_lenght(int index) const;
  ::d_t_c_srlz::StopsLenght* add_list_stop_lenght();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::StopsLenght >&
      list_stop_lenght() const;

  // .r_s_srlz.RenderSettings render_settings = 4;
  bool has_render_settings() const;
  private:
  bool _internal_has_render_settings() const;
  public:
  void clear_render_settings();
  const ::r_s_srlz::RenderSettings& render_settings() const;
  PROTOBUF_NODISCARD ::r_s_srlz::RenderSettings* release_render_settings();
  ::r_s_srlz::RenderSettings* mutable_render_settings();
  void set_allocated_render_settings(::r_s_srlz::RenderSettings* render_settings);
  private:
  const ::r_s_srlz::RenderSettings& _internal_render_settings() const;
  ::r_s_srlz::RenderSettings* _internal_mutable_render_settings();
  public:
  void unsafe_arena_set_allocated_render_settings(
      ::r_s_srlz::RenderSettings* render_settings);
  ::r_s_srlz::RenderSettings* unsafe_arena_release_render_settings();

  // .t_r_srlz.TransportRouter t_r_ = 5;
  bool has_t_r_() const;
  private:
  bool _internal_has_t_r_() const;
  public:
  void clear_t_r_();
  const ::t_r_srlz::TransportRouter& t_r_() const;
  PROTOBUF_NODISCARD ::t_r_srlz::TransportRouter* release_t_r_();
  ::t_r_srlz::TransportRouter* mutable_t_r_();
  void set_allocated_t_r_(::t_r_srlz::TransportRouter* t_r_);
  private:
  const ::t_r_srlz::TransportRouter& _internal_t_r_() const;
  ::t_r_srlz::TransportRouter* _internal_mutable_t_r_();
  public:
  void unsafe_arena_set_allocated_t_r_(
      ::t_r_srlz::TransportRouter* t_r_);
  ::t_r_srlz::TransportRouter* unsafe_arena_release_t_r_();

  // @@protoc_insertion_point(class_scope:t_c_srlz.TransportCatalogue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Stop > list_stop_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Bus > list_bus_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::StopsLenght > list_stop_lenght_;
    ::r_s_srlz::RenderSettings* render_settings_;
    ::t_r_srlz::TransportRouter* t_r__;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transport_5fcatalogue_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TransportCatalogue

// repeated .d_t_c_srlz.Stop list_stop = 1;
inline int TransportCatalogue::_internal_list_stop_size() const {
  return _impl_.list_stop_.size();
}
inline int TransportCatalogue::list_stop_size() const {
  return _internal_list_stop_size();
}
inline ::d_t_c_srlz::Stop* TransportCatalogue::mutable_list_stop(int index) {
  // @@protoc_insertion_point(field_mutable:t_c_srlz.TransportCatalogue.list_stop)
  return _impl_.list_stop_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Stop >*
TransportCatalogue::mutable_list_stop() {
  // @@protoc_insertion_point(field_mutable_list:t_c_srlz.TransportCatalogue.list_stop)
  return &_impl_.list_stop_;
}
inline const ::d_t_c_srlz::Stop& TransportCatalogue::_internal_list_stop(int index) const {
  return _impl_.list_stop_.Get(index);
}
inline const ::d_t_c_srlz::Stop& TransportCatalogue::list_stop(int index) const {
  // @@protoc_insertion_point(field_get:t_c_srlz.TransportCatalogue.list_stop)
  return _internal_list_stop(index);
}
inline ::d_t_c_srlz::Stop* TransportCatalogue::_internal_add_list_stop() {
  return _impl_.list_stop_.Add();
}
inline ::d_t_c_srlz::Stop* TransportCatalogue::add_list_stop() {
  ::d_t_c_srlz::Stop* _add = _internal_add_list_stop();
  // @@protoc_insertion_point(field_add:t_c_srlz.TransportCatalogue.list_stop)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Stop >&
TransportCatalogue::list_stop() const {
  // @@protoc_insertion_point(field_list:t_c_srlz.TransportCatalogue.list_stop)
  return _impl_.list_stop_;
}

// repeated .d_t_c_srlz.Bus list_bus = 2;
inline int TransportCatalogue::_internal_list_bus_size() const {
  return _impl_.list_bus_.size();
}
inline int TransportCatalogue::list_bus_size() const {
  return _internal_list_bus_size();
}
inline ::d_t_c_srlz::Bus* TransportCatalogue::mutable_list_bus(int index) {
  // @@protoc_insertion_point(field_mutable:t_c_srlz.TransportCatalogue.list_bus)
  return _impl_.list_bus_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Bus >*
TransportCatalogue::mutable_list_bus() {
  // @@protoc_insertion_point(field_mutable_list:t_c_srlz.TransportCatalogue.list_bus)
  return &_impl_.list_bus_;
}
inline const ::d_t_c_srlz::Bus& TransportCatalogue::_internal_list_bus(int index) const {
  return _impl_.list_bus_.Get(index);
}
inline const ::d_t_c_srlz::Bus& TransportCatalogue::list_bus(int index) const {
  // @@protoc_insertion_point(field_get:t_c_srlz.TransportCatalogue.list_bus)
  return _internal_list_bus(index);
}
inline ::d_t_c_srlz::Bus* TransportCatalogue::_internal_add_list_bus() {
  return _impl_.list_bus_.Add();
}
inline ::d_t_c_srlz::Bus* TransportCatalogue::add_list_bus() {
  ::d_t_c_srlz::Bus* _add = _internal_add_list_bus();
  // @@protoc_insertion_point(field_add:t_c_srlz.TransportCatalogue.list_bus)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::Bus >&
TransportCatalogue::list_bus() const {
  // @@protoc_insertion_point(field_list:t_c_srlz.TransportCatalogue.list_bus)
  return _impl_.list_bus_;
}

// repeated .d_t_c_srlz.StopsLenght list_stop_lenght = 3;
inline int TransportCatalogue::_internal_list_stop_lenght_size() const {
  return _impl_.list_stop_lenght_.size();
}
inline int TransportCatalogue::list_stop_lenght_size() const {
  return _internal_list_stop_lenght_size();
}
inline ::d_t_c_srlz::StopsLenght* TransportCatalogue::mutable_list_stop_lenght(int index) {
  // @@protoc_insertion_point(field_mutable:t_c_srlz.TransportCatalogue.list_stop_lenght)
  return _impl_.list_stop_lenght_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::StopsLenght >*
TransportCatalogue::mutable_list_stop_lenght() {
  // @@protoc_insertion_point(field_mutable_list:t_c_srlz.TransportCatalogue.list_stop_lenght)
  return &_impl_.list_stop_lenght_;
}
inline const ::d_t_c_srlz::StopsLenght& TransportCatalogue::_internal_list_stop_lenght(int index) const {
  return _impl_.list_stop_lenght_.Get(index);
}
inline const ::d_t_c_srlz::StopsLenght& TransportCatalogue::list_stop_lenght(int index) const {
  // @@protoc_insertion_point(field_get:t_c_srlz.TransportCatalogue.list_stop_lenght)
  return _internal_list_stop_lenght(index);
}
inline ::d_t_c_srlz::StopsLenght* TransportCatalogue::_internal_add_list_stop_lenght() {
  return _impl_.list_stop_lenght_.Add();
}
inline ::d_t_c_srlz::StopsLenght* TransportCatalogue::add_list_stop_lenght() {
  ::d_t_c_srlz::StopsLenght* _add = _internal_add_list_stop_lenght();
  // @@protoc_insertion_point(field_add:t_c_srlz.TransportCatalogue.list_stop_lenght)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::d_t_c_srlz::StopsLenght >&
TransportCatalogue::list_stop_lenght() const {
  // @@protoc_insertion_point(field_list:t_c_srlz.TransportCatalogue.list_stop_lenght)
  return _impl_.list_stop_lenght_;
}

// .r_s_srlz.RenderSettings render_settings = 4;
inline bool TransportCatalogue::_internal_has_render_settings() const {
  return this != internal_default_instance() && _impl_.render_settings_ != nullptr;
}
inline bool TransportCatalogue::has_render_settings() const {
  return _internal_has_render_settings();
}
inline const ::r_s_srlz::RenderSettings& TransportCatalogue::_internal_render_settings() const {
  const ::r_s_srlz::RenderSettings* p = _impl_.render_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::r_s_srlz::RenderSettings&>(
      ::r_s_srlz::_RenderSettings_default_instance_);
}
inline const ::r_s_srlz::RenderSettings& TransportCatalogue::render_settings() const {
  // @@protoc_insertion_point(field_get:t_c_srlz.TransportCatalogue.render_settings)
  return _internal_render_settings();
}
inline void TransportCatalogue::unsafe_arena_set_allocated_render_settings(
    ::r_s_srlz::RenderSettings* render_settings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.render_settings_);
  }
  _impl_.render_settings_ = render_settings;
  if (render_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t_c_srlz.TransportCatalogue.render_settings)
}
inline ::r_s_srlz::RenderSettings* TransportCatalogue::release_render_settings() {
  
  ::r_s_srlz::RenderSettings* temp = _impl_.render_settings_;
  _impl_.render_settings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::r_s_srlz::RenderSettings* TransportCatalogue::unsafe_arena_release_render_settings() {
  // @@protoc_insertion_point(field_release:t_c_srlz.TransportCatalogue.render_settings)
  
  ::r_s_srlz::RenderSettings* temp = _impl_.render_settings_;
  _impl_.render_settings_ = nullptr;
  return temp;
}
inline ::r_s_srlz::RenderSettings* TransportCatalogue::_internal_mutable_render_settings() {
  
  if (_impl_.render_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::r_s_srlz::RenderSettings>(GetArenaForAllocation());
    _impl_.render_settings_ = p;
  }
  return _impl_.render_settings_;
}
inline ::r_s_srlz::RenderSettings* TransportCatalogue::mutable_render_settings() {
  ::r_s_srlz::RenderSettings* _msg = _internal_mutable_render_settings();
  // @@protoc_insertion_point(field_mutable:t_c_srlz.TransportCatalogue.render_settings)
  return _msg;
}
inline void TransportCatalogue::set_allocated_render_settings(::r_s_srlz::RenderSettings* render_settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.render_settings_);
  }
  if (render_settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(render_settings));
    if (message_arena != submessage_arena) {
      render_settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, render_settings, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.render_settings_ = render_settings;
  // @@protoc_insertion_point(field_set_allocated:t_c_srlz.TransportCatalogue.render_settings)
}

// .t_r_srlz.TransportRouter t_r_ = 5;
inline bool TransportCatalogue::_internal_has_t_r_() const {
  return this != internal_default_instance() && _impl_.t_r__ != nullptr;
}
inline bool TransportCatalogue::has_t_r_() const {
  return _internal_has_t_r_();
}
inline const ::t_r_srlz::TransportRouter& TransportCatalogue::_internal_t_r_() const {
  const ::t_r_srlz::TransportRouter* p = _impl_.t_r__;
  return p != nullptr ? *p : reinterpret_cast<const ::t_r_srlz::TransportRouter&>(
      ::t_r_srlz::_TransportRouter_default_instance_);
}
inline const ::t_r_srlz::TransportRouter& TransportCatalogue::t_r_() const {
  // @@protoc_insertion_point(field_get:t_c_srlz.TransportCatalogue.t_r_)
  return _internal_t_r_();
}
inline void TransportCatalogue::unsafe_arena_set_allocated_t_r_(
    ::t_r_srlz::TransportRouter* t_r_) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.t_r__);
  }
  _impl_.t_r__ = t_r_;
  if (t_r_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t_c_srlz.TransportCatalogue.t_r_)
}
inline ::t_r_srlz::TransportRouter* TransportCatalogue::release_t_r_() {
  
  ::t_r_srlz::TransportRouter* temp = _impl_.t_r__;
  _impl_.t_r__ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::t_r_srlz::TransportRouter* TransportCatalogue::unsafe_arena_release_t_r_() {
  // @@protoc_insertion_point(field_release:t_c_srlz.TransportCatalogue.t_r_)
  
  ::t_r_srlz::TransportRouter* temp = _impl_.t_r__;
  _impl_.t_r__ = nullptr;
  return temp;
}
inline ::t_r_srlz::TransportRouter* TransportCatalogue::_internal_mutable_t_r_() {
  
  if (_impl_.t_r__ == nullptr) {
    auto* p = CreateMaybeMessage<::t_r_srlz::TransportRouter>(GetArenaForAllocation());
    _impl_.t_r__ = p;
  }
  return _impl_.t_r__;
}
inline ::t_r_srlz::TransportRouter* TransportCatalogue::mutable_t_r_() {
  ::t_r_srlz::TransportRouter* _msg = _internal_mutable_t_r_();
  // @@protoc_insertion_point(field_mutable:t_c_srlz.TransportCatalogue.t_r_)
  return _msg;
}
inline void TransportCatalogue::set_allocated_t_r_(::t_r_srlz::TransportRouter* t_r_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.t_r__);
  }
  if (t_r_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(t_r_));
    if (message_arena != submessage_arena) {
      t_r_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, t_r_, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.t_r__ = t_r_;
  // @@protoc_insertion_point(field_set_allocated:t_c_srlz.TransportCatalogue.t_r_)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace t_c_srlz

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_transport_5fcatalogue_2eproto
